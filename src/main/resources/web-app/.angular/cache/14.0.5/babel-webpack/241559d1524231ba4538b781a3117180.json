{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(map); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var prop = map[key];\n    var type = void 0;\n\n    if (_typeof(prop) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","convertMapToSchema","map","schema","_i","_Object$keys","Object","keys","length","key","prop","type"],"sources":["C:/Users/Elfar/Desktop/tik/Codingias/src/main/resources/web-app/node_modules/read-excel-file/modules/read/schema/convertMapToSchema.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nexport default function convertMapToSchema(map) {\n  var schema = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(map); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var prop = map[key];\n    var type = void 0;\n\n    if (_typeof(prop) === 'object') {\n      prop = Object.keys(map[key])[0];\n      type = convertMapToSchema(map[key][prop]);\n    }\n\n    schema[key] = {\n      prop: prop\n    };\n\n    if (type) {\n      schema[key].type = type;\n    }\n  }\n\n  return schema;\n}\n"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAAE;;EAA2B,OAAOD,OAAO,GAAG,cAAc,OAAOE,MAArB,IAA+B,YAAY,OAAOA,MAAM,CAACC,QAAzD,GAAoE,UAAUF,GAAV,EAAe;IAAE,OAAO,OAAOA,GAAd;EAAoB,CAAzG,GAA4G,UAAUA,GAAV,EAAe;IAAE,OAAOA,GAAG,IAAI,cAAc,OAAOC,MAA5B,IAAsCD,GAAG,CAACG,WAAJ,KAAoBF,MAA1D,IAAoED,GAAG,KAAKC,MAAM,CAACG,SAAnF,GAA+F,QAA/F,GAA0G,OAAOJ,GAAxH;EAA8H,CAArQ,EAAuQD,OAAO,CAACC,GAAD,CAArR;AAA6R;;AAEhV,eAAe,SAASK,kBAAT,CAA4BC,GAA5B,EAAiC;EAC9C,IAAIC,MAAM,GAAG,EAAb;;EAEA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAZ,CAAhC,EAAkDE,EAAE,GAAGC,YAAY,CAACG,MAApE,EAA4EJ,EAAE,EAA9E,EAAkF;IAChF,IAAIK,GAAG,GAAGJ,YAAY,CAACD,EAAD,CAAtB;IACA,IAAIM,IAAI,GAAGR,GAAG,CAACO,GAAD,CAAd;IACA,IAAIE,IAAI,GAAG,KAAK,CAAhB;;IAEA,IAAIhB,OAAO,CAACe,IAAD,CAAP,KAAkB,QAAtB,EAAgC;MAC9BA,IAAI,GAAGJ,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACO,GAAD,CAAf,EAAsB,CAAtB,CAAP;MACAE,IAAI,GAAGV,kBAAkB,CAACC,GAAG,CAACO,GAAD,CAAH,CAASC,IAAT,CAAD,CAAzB;IACD;;IAEDP,MAAM,CAACM,GAAD,CAAN,GAAc;MACZC,IAAI,EAAEA;IADM,CAAd;;IAIA,IAAIC,IAAJ,EAAU;MACRR,MAAM,CAACM,GAAD,CAAN,CAAYE,IAAZ,GAAmBA,IAAnB;IACD;EACF;;EAED,OAAOR,MAAP;AACD"},"metadata":{},"sourceType":"module"}