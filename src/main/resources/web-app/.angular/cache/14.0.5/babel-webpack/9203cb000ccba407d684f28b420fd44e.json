{"ast":null,"code":"import parseCell from './parseCell.js';\nimport { getCells, getMergedCells } from '../xml/xlsx.js';\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\n  var cells = getCells(sheet);\n\n  if (cells.length === 0) {\n    return [];\n  } // const mergedCells = getMergedCells(sheet)\n  // for (const mergedCell of mergedCells) {\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\n  // }\n\n\n  return cells.map(function (node) {\n    return parseCell(node, sheet, xml, values, styles, properties, options);\n  });\n}","map":{"version":3,"names":["parseCell","getCells","getMergedCells","parseCells","sheet","xml","values","styles","properties","options","cells","length","map","node"],"sources":["C:/Users/Elfar/Desktop/tik/Codingias/src/main/resources/web-app/node_modules/read-excel-file/modules/read/parseCells.js"],"sourcesContent":["import parseCell from './parseCell.js';\nimport { getCells, getMergedCells } from '../xml/xlsx.js';\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\n  var cells = getCells(sheet);\n\n  if (cells.length === 0) {\n    return [];\n  } // const mergedCells = getMergedCells(sheet)\n  // for (const mergedCell of mergedCells) {\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\n  // }\n\n\n  return cells.map(function (node) {\n    return parseCell(node, sheet, xml, values, styles, properties, options);\n  });\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,gBAAzC;AACA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4DC,OAA5D,EAAqE;EAClF,IAAIC,KAAK,GAAGT,QAAQ,CAACG,KAAD,CAApB;;EAEA,IAAIM,KAAK,CAACC,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAO,EAAP;EACD,CALiF,CAKhF;EACF;EACA;EACA;EACA;;;EAGA,OAAOD,KAAK,CAACE,GAAN,CAAU,UAAUC,IAAV,EAAgB;IAC/B,OAAOb,SAAS,CAACa,IAAD,EAAOT,KAAP,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,OAA/C,CAAhB;EACD,CAFM,CAAP;AAGD"},"metadata":{},"sourceType":"module"}